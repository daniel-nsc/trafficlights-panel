{"version":3,"sources":["../src/trafficlight_ctrl.js"],"names":["MetricsPanelCtrl","moment","_","TimeSeries","panelDefaults","bgColor","trafficLightSettings","lightsPerLine","width","invertScale","showValue","showTrend","redThreshold","greenThreshold","max","fontSize","units","digits","spreadControls","sortLights","renderLink","linkUrl","linkTooltip","linkTargetBlank","splitLabel","splitLabelPart","splitLabelDelm","splitLabelJoiner","TrafficLightCtrl","$scope","$injector","templateSrv","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","percentPerLight","data","updateTraffics","series","dataList","newseries","map","seriesHandler","i","length","label_name","label_parts","split","label_split","label","RegExp","l","newserie","datapoints","slice","trend","value","trendClass","push","e","console","log","rows","sortBy","o","name","replace","orderBy","seriesData","alias","target","addEditorTab","$timeout","cancel","nextTickPromise","link","scopedVars","format","scoped","key","trafficsperline","lines","metrics","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"trafficlight_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series';\n\nimport './css/trafficlight-panel.css!';\n\nconst panelDefaults = {\n  bgColor: null\n  ,trafficLightSettings:\n  {\n    lightsPerLine:5,\n    width:20,\n    invertScale:false,\n    showValue:true,\n    showTrend:true,\n    redThreshold:20,\n    greenThreshold:80,\n    max:100,\n    fontSize:'12px',\n    units:'',\n    digits:1,\n    spreadControls:false,\n    sortLights:false,\n    renderLink:false,\n    linkUrl: \"\",\n    linkTooltip: \"\",\n    linkTargetBlank:false,\n    splitLabel: false,\n    splitLabelPart: \"0\",\n    splitLabelDelm: \"[,]\",\n    splitLabelJoiner: \" - \"\n  }\n};\n\n\n\nexport class TrafficLightCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, templateSrv) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.percentPerLight=100;\n\n    this.data=[]\n    this.templateSrv = templateSrv\n    this.updateTraffics();\n  }\n\n\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    //this.data = this.parseSeries(this.series);\n  }\n\n\n\n  onDataReceived(dataList) {\n    var newseries=[]\n\n    try\n    {\n      this.series = dataList.map(this.seriesHandler.bind(this));\n\n\n      for(var i =0;i<this.series.length;i++)\n      {\n\tif(this.panel.trafficLightSettings.splitLabel){\n\t\tvar label_name = \"\"\n\n\t\tvar label_parts = this.panel.trafficLightSettings.splitLabelPart.split(',')\n\n\t\tvar label_split = this.series[i].label.split(new RegExp(this.panel.trafficLightSettings.splitLabelDelm, 'g'))\n\n\n\t\tfor(var l=0; l<label_parts.length; l++){\n\t\t\tif(l == 0){\n\t\t\t\tlabel_name += label_split[label_parts[l]]\n\t\t\t}else{\n\t\t\t\tlabel_name += this.panel.trafficLightSettings.splitLabelJoiner + label_split[label_parts[l]]\n\t\t\t}\n\t\t}\n\n        \tvar newserie={\n        \t  \"name\":label_name,\n        \t  \"value\":this.series[i].datapoints.slice(-1)[0][0]\n        \t}\n\t}else{\n        \tvar newserie={\n        \t  \"name\":this.series[i].label,\n        \t  \"value\":this.series[i].datapoints.slice(-1)[0][0]\n        \t}\n\t}\n\n        if(this.series[i].datapoints.length>1)\n        {\n          newserie.trend=newserie.value-this.series[i].datapoints.slice(-2)[0][0]\n\n          if(newserie.trend>0)\n            if(this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass='traffic-light-trend-bad'\n            else\n              newserie.trendClass='traffic-light-trend-good'\n          else if(newserie.trend<0)\n            if(this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass='traffic-light-trend-good'\n            else\n              newserie.trendClass='traffic-light-trend-bad'\n          else\n            newserie.trendClass='traffic-light-trend-neutral'\n        }\n        newseries.push(newserie);\n      }\n\n    }\n    catch(e)\n    {\n      // This is not a time serie\n      console.log(e);\n      this.series=[];\n      for(var i=0;i<dataList[0].rows.length;i++)\n      {\n        var newserie={\n          \"name\":dataList[0].rows[i][0],\n          \"value\":dataList[0].rows[i][1]\n        }\n        newseries.push(newserie);\n      }\n    }\n\n  //    console.log(newseries)\n\n    if(this.panel.trafficLightSettings.sortLights)\n    {\n      this.data=_.sortBy(newseries, [function(o) { return o.name.replace(\":\",\"\").replace(\" \",\"\").replace(\"}\",\"\").replace(\"{\",\"\") }]);\n    }\n    else\n    {\n      if(this.panel.trafficLightSettings.invertScale)\n        this.data=_.orderBy(newseries, 'value','desc');\n      else\n        this.data=_.orderBy(newseries, 'value','asc');\n    }\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n    return series;\n  }\n\n  onInitEditMode() {\n\n    this.addEditorTab('Options', 'public/plugins/snuids-trafficlights-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  renderLink(link, scopedVars, format){\n    var scoped = {}\n    for (var key in scopedVars) {\n        scoped[key] = { value: scopedVars[key] }\n    }\n    if (format) {\n        return this.templateSrv.replace(link, scoped, format)\n    } else {\n        return this.templateSrv.replace(link, scoped)\n    }\n  }\n\n  updateTraffics() {\n\n    var trafficsperline=this.panel.trafficLightSettings.lightsPerLine;\n\n    if(this.panel.trafficLightSettings.spreadControls)\n    {\n      trafficsperline=this.data.length;\n      if(this.data.length==0)\n        trafficsperline=1;\n      this.percentPerLight=100/trafficsperline;\n    }\n    else\n      this.percentPerLight=100/trafficsperline;\n\n    this.lines=[];\n    var metrics=[];\n    for(var i=0;i<this.data.length;i++)\n    {\n      if((i%trafficsperline)==0)\n\t\t\t{\n\t\t\t\tmetrics=[];\n\t\t\t\tthis.lines.push(metrics);\n      }\n      metrics.push(this.data[i]);\n    }\n    this.nextTickPromise = this.$timeout(this.updateTraffics.bind(this), 1000);\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nTrafficLightCtrl.templateUrl = 'module.html';\n"]}